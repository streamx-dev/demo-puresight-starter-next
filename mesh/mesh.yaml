defaultRegistry: ghcr.io/streamx-dev/streamx-blueprints
defaultImageTag: 2.0.8-SNAPSHOT-jvm

sources:
  github:
    outgoing:
      - "pages"
      - "fragments"
      - "assets"
      - "web-resources"
      - "data"
      - "renderers"
      - "rendering-contexts"
      - "layouts"
      - "compositions"
  pim:
    outgoing:
      - "data"
  cms:
    outgoing:
      - "pages"
      - "fragments"
      - "assets"
      - "web-resources"
      - "data"
      - "renderers"
      - "rendering-contexts"
      - "layouts"
      - "compositions"
  eds:
    outgoing:
      - "pages"

ingestion:
  rest-ingestion:
    environmentFrom:
      configs:
        - "ingestion.properties"
    environment:
      # Ensures that generated tokens would work between cluster restarts
      STREAMX_SOURCES_GITHUB_ACCEPT_IAT_FROM: "1704067200"
      STREAMX_SOURCES_PIM_ACCEPT_IAT_FROM: "1704067200"
      STREAMX_SOURCES_CMS_ACCEPT_IAT_FROM: "1704067200"
      STREAMX_SOURCES_EDS_ACCEPT_IAT_FROM: "1704067200"

processing:

  blueprint-relay-web-resources:
    image: relay-processing-service
    incoming:
      messages:
        topic: inboxes/web-resources
    outgoing:
      relayed-messages:
        topic: relays/web-resources-for-external-resources-processing-service
    environment:
      MP_MESSAGING_INCOMING_MESSAGES_SCHEMA: "web-resource-schema"
      MP_MESSAGING_OUTGOING_RELAYED-MESSAGES_SCHEMA: "web-resource-schema"

  blueprint-relay-external-web-resources-to-not-be-processed:
    image: relay-processing-service
    incoming:
      messages:
        topic: relays/web-resources-to-not-be-processed-by-external-resources-processing-service
    outgoing:
      relayed-messages:
        topic: outboxes/web-resources
    environment:
      MP_MESSAGING_INCOMING_MESSAGES_SCHEMA: "web-resource-schema"
      MP_MESSAGING_OUTGOING_RELAYED-MESSAGES_SCHEMA: "web-resource-schema"

  blueprint-relay-assets:
    image: relay-processing-service
    incoming:
      messages:
        topic: inboxes/assets
    outgoing:
      relayed-messages:
        topic: outboxes/assets
    environment:
      MP_MESSAGING_INCOMING_MESSAGES_SCHEMA: "asset-schema"
      MP_MESSAGING_OUTGOING_RELAYED-MESSAGES_SCHEMA: "asset-schema"

  blueprint-relay-pages:
    image: relay-processing-service
    incoming:
      messages:
        topic: inboxes/pages
    outgoing:
      relayed-messages:
        topic: relays/pages-for-external-resources-processing-service
    environment:
      MP_MESSAGING_INCOMING_MESSAGES_SCHEMA: "page-schema"
      MP_MESSAGING_OUTGOING_RELAYED-MESSAGES_SCHEMA: "page-schema"

  blueprint-relay-external-pages-to-not-be-processed:
    image: relay-processing-service
    incoming:
      messages:
        topic: relays/pages-to-not-be-processed-by-external-resources-processing-service
    outgoing:
      relayed-messages:
        topic: relays/pages
    environment:
      MP_MESSAGING_INCOMING_MESSAGES_SCHEMA: "page-schema"
      MP_MESSAGING_OUTGOING_RELAYED-MESSAGES_SCHEMA: "page-schema"

  blueprint-external-resources--pages:
    image: external-resources-processing-service
    incoming:
      incoming-pages:
        topic: relays/pages-for-external-resources-processing-service # from main relay service
      incoming-resource-processings:
        topic: relays/resource-processings # internal channel
      incoming-download-responses:
        topic: relays/download-responses # internal channel
    outgoing:
      outgoing-external-pages:
        topic: relays/pages-to-not-be-processed-by-external-resources-processing-service # to be transferred to outboxes/pages by additional instance of relay pages service
      outgoing-external-web-resources:
        topic: outboxes/web-resources # no further processing of referenced web resources
      outgoing-external-assets:
        topic: outboxes/assets # no further processing of referenced assets
      outgoing-processed-pages:
        topic: relays/pages
      outgoing-resource-processings:
        topic: relays/resource-processings # internal channel
      outgoing-download-responses:
        topic: relays/download-responses # internal channel
    environment:
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_BASE_URL_FOR_RELATIVE_PATHS: "https://main--arbory-dev--arbory-digital-inc.aem.live/"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_PROCESSABLE_SX_TYPES: "page/blog,page/noindex,page/blog/external,web-resource/static"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_HTML_EXTERNAL_RESOURCE_XPATH_SELECTORS: "//img/@src,//a/@href,//link/@href//script/@src,//picture/source/@srcset,//meta[@property='og:image' or @name='twitter:image']/@content,//meta[@name='header' or @name='footer']/@content"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_HTML_EXTERNAL_RESOURCE_URL_EXCLUSIONS_PATTERN: ".*(/blocks/|/fonts/|/icons/|/scripts/|/styles/|helix-query\\.yaml|adobe\\.com/|/open\\.spotify\\.com/|\\.linkedin\\.com/|/www\\.hurix\\.com/|/twitter\\.com/|/frame\\.work|youtube\\.com/|youtu\\.be/).*"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_EXTERNAL_PAGE_PUBLISH_SX_TYPE: "page/blog/external"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_EXTERNAL_WEB_RESOURCE_PUBLISH_SX_TYPE: "web-resource/static/external"

  blueprint-external-resources--web-resources:
    image: external-resources-processing-service
    incoming:
      incoming-web-resources:
        topic: relays/web-resources-for-external-resources-processing-service # from main relay service
      incoming-resource-processings:
        topic: relays/resource-processings # internal channel
      incoming-download-responses:
        topic: relays/download-responses # internal channel
    outgoing:
      outgoing-external-pages:
        topic: relays/pages-for-external-resources-processing-service # should be transferred to the process pages instance
      outgoing-external-web-resources:
        topic: relays/web-resources-to-not-be-processed-by-external-resources-processing-service # no further processing for referenced web resources
      outgoing-external-assets:
        topic: outboxes/assets # no further processing for referenced assets
      outgoing-processed-web-resources:
        topic: outboxes/web-resources
      outgoing-resource-processings:
        topic: relays/resource-processings # internal channel
      outgoing-download-responses:
        topic: relays/download-responses # internal channel
    environment:
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_BASE_URL_FOR_RELATIVE_PATHS: "https://main--arbory-dev--arbory-digital-inc.aem.live/"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_PROCESSABLE_SX_TYPES: "web-resource/static,web-resource/static/external"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_XML_EXTERNAL_RESOURCE_XPATH_SELECTORS: "/*[local-name()='urlset']/*[local-name()='url']/*[local-name()='loc']"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_JSON_EXTERNAL_RESOURCE_JSONPATH_SELECTORS: "$.data[*].image"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_EXTERNAL_PAGE_PUBLISH_SX_TYPE: "page/blog/external"
      STREAMX_BLUEPRINTS_EXTERNAL_RESOURCES_PROCESSING_SERVICE_EXTERNAL_WEB_RESOURCE_PUBLISH_SX_TYPE: "web-resource/static/external"

  blueprint-image-optimization:
    image: image-optimization-processing-service
    incoming:
      incoming-assets:
        topic: inboxes/assets
      incoming-pages:
        topic: relays/pages
    outgoing:
      optimized-assets:
        topic: inboxes/assets
      outgoing-pages:
        topic: outboxes/pages
    environmentFrom:
      configs:
        - "image-optimization.properties"

  blueprint-sitemap-generator:
    image: sitemap-generator-processing-service
    incoming:
      incoming-pages:
        topic: relays/pages
    outgoing:
      outgoing-sitemaps:
        topic: outboxes/web-resources
    environment:
      # local test domain, see readme
      STREAMX_BLUEPRINTS_SITEMAP-GENERATOR-PROCESSING-SERVICE_BASE-URL: "${streamx.accelerator.web.url}"
      STREAMX_BLUEPRINTS_SITEMAP-GENERATOR-PROCESSING-SERVICE_OUTPUT-KEY: "/sitemap.xml"
      STREAMX_BLUEPRINTS_SITEMAP-GENERATOR-PROCESSING-SERVICE_OUTPUT-TYPE: "web-resource/sitemap"

  blueprint-indexables-producer:
    image: indexables-producer-processing-service
    environment:
      STREAMX_BLUEPRINTS_INDEXABLES_PRODUCER_PROCESSING_SERVICE_INDEX_FRAGMENTS: "false"
    incoming:
      pages:
        topic: relays/pages
    outgoing:
      indexable-resources:
        topic: outboxes/indexable-resources

  blueprint-scheduled-eds-index:
    image: scheduled-resource-processing-service
    incoming:
      scheduling-triggers:
        topic: inboxes/web-resources
    outgoing:
      fetched-resources:
        topic: relays/web-resources-for-external-resources-processing-service
    environment:
      STREAMX_BLUEPRINTS_SCHEDULED-RESOURCE-PROCESSING-SERVICE_FETCHER: "eds"
      STREAMX_BLUEPRINTS_SCHEDULED-RESOURCE-PROCESSING-SERVICE_EDS_ENDPOINT_URL: "https://main--arbory-dev--arbory-digital-inc.aem.live"
      STREAMX_BLUEPRINTS_SCHEDULED-RESOURCE-PROCESSING-SERVICE_EDS_RESOURCE_NAME_PATTERN: "helix-query.yaml"
      STREAMX_BLUEPRINTS_SCHEDULED-RESOURCE-PROCESSING-SERVICE_OUTPUT_TYPE: "web-resource/static"
      # Keep stores up to date when container inside a pod restarts
      QUASAR_MESSAGING_STORE_BACKEND: "rocksdb"
      QUASAR_MESSAGING_STORE_ROCKSDB_PATH: "${streamx.rocksdb.path}"
      QUARKUS_PROFILE: cloud,dev

delivery:
  blueprint-search:
    image: opensearch-delivery-service
    incoming:
      indexable-resources:
        topic: outboxes/indexable-resources
    port: 8082
    volumesFrom:
      configs:
        - "opensearch/service-init:/deployments/opensearch/service-init"
    environment:
      QUARKUS_ELASTICSEARCH_USERNAME: "admin"
      QUARKUS_ELASTICSEARCH_HOSTS: "blueprint-search.opensearch:9201"
      STREAMX_BLUEPRINTS_OPENSEARCH-DELIVERY-SERVICE_MIGRATION-SCRIPT-LOCATIONS: "classpath:opensearch/service-init,file:opensearch/service-init"
      STREAMX_BLUEPRINTS_OPENSEARCH-DELIVERY-SERVICE_TYPE-REQUIRED: "false"
      # Keep stores up to date when container inside a pod restarts
      QUASAR_MESSAGING_STORE_BACKEND: "rocksdb"
      QUASAR_MESSAGING_STORE_ROCKSDB_PATH: "${streamx.rocksdb.path}"
    environmentFrom:
      secrets:
        - "opensearch-secrets.properties"
    components:
      opensearch:
        image: "docker.io/opensearchproject/opensearch:2.16.0"
        ports:
          - 9201:9201
        environment:
          network.host: "0.0.0.0"
          http.port: "9201"
          discovery.type: "single-node"
          DISABLE_SECURITY_PLUGIN: "true"
        environmentFrom:
          secrets:
            - "opensearch-component-secrets.properties"
  blueprint-web:
    image: web-delivery-service
    incoming:
      pages:
        topic: outboxes/pages
      assets:
        topic: outboxes/assets
      web-resources:
        topic: outboxes/web-resources
    environment:
      STREAMX_BLUEPRINTS_WEB-DELIVERY-SERVICE_RESOURCES_DIRECTORY: "/srv/www"
      STREAMX_URL-INCLUDE-REPLACEMENT-PROVIDER_SSI-INCLUDE-FALLBACK-CONTENT: "<!-- Include Not Found -->"
      # Keep stores up to date when container inside a pod restarts
      QUASAR_MESSAGING_STORE_BACKEND: "rocksdb"
      QUASAR_MESSAGING_STORE_ROCKSDB_PATH: "${streamx.rocksdb.path}"
    repositoryVolume: "/srv/www"
    port: 8083
    components:
      webserver:
        image: "docker.io/library/nginx:1.26.0"
        ports:
          - 8084:80
        repositoryVolume: "/usr/share/nginx/html"
        volumesFrom:
          configs:
            - "nginx_conf/demo.conf:/etc/nginx/conf.d/default.conf"
