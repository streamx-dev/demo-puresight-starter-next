defaults:
  global:
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
  ingestion:
    replicas: ${streamx.default.ingestion.replicas}
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
  processing:
    replicas: ${streamx.default.processing.replicas}
    stateful: true
  delivery:
    replicas: ${streamx.default.delivery.replicas}
    stateful: true
    podDisruptionBudget:
      enabled: true
      minAvailable: 1


ingestion:
  rest-ingestion:
    ingress:
      enabled: true
      hosts:
        - host: ${streamx.accelerator.ingestion.host}
          paths:
            - path: /*
      tls:
        - hosts:
            - ${streamx.accelerator.ingestion.host}

processing:
  blueprint-composition-engine:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-data-collector:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-data-deps-rewriter:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-image-optimization:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-indexables-producer:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-json-aggregator:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-message-converter:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-outbox-relay-fragments:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-pages-deps-rewriter:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-relay-assets:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-relay-fragments:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-relay-isolated-pages:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-relay-pages:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-relay-web-resources:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-rendering-engine:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-sitemap-generator:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  blueprint-web-resources-deps-rewriter:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
  eds-index-fetcher:
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi

delivery:
  blueprint-web:
    volumes:
      repository-volume:
        size: 10Gi
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
    ingress:
      enabled: true
      hosts:
        - host: ${streamx.accelerator.web.host}
          paths:
            - servicePort: 8084
              path: /*
      tls:
        - hosts:
            - ${streamx.accelerator.web.host}
          secretName: wildcard-streamx-cloud.crt
    probes:
      startup:
        httpGet:
          path: /q/health
          port: 8080
        initialDelaySeconds: 10
        timeoutSeconds: 2
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 120
    components:
      webserver:
        probes:
          readiness:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          liveness:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startup:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
  blueprint-search:
    replicas: 1
    podDisruptionBudget:
      enabled: false
    volumes:
      rocksdb:
        mountPath: "${streamx.rocksdb.path}"
        size: 5Gi
    ingress:
      enabled: true
      hosts:
        - host: ${streamx.accelerator.web.host}
          paths:
            - path: /search/*
      tls:
        - hosts:
            - ${streamx.accelerator.web.host}
          secretName: wildcard-streamx-cloud.crt
    probes:
      startup:
        httpGet:
          path: /q/health
          port: 8080
        initialDelaySeconds: 10
        timeoutSeconds: 2
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 120
    components:
      opensearch:
        sidecar: true
        volumes:
          opensearch-data:
            mountPath: /usr/share/opensearch/data
            size: 10Gi
        probes:
          readiness:
            httpGet:
              path: /
              port: 9201
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          liveness:
            httpGet:
              path: /
              port: 9201
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          startup:
            httpGet:
              path: /
              port: 9201
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
